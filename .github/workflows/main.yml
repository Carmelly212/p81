name: 'p81'
on:
  push:
    branches:
    - main
jobs:
  infra:
    name: 'infra'
    runs-on: ubuntu-20.04
    # setting outputs for the infra job to be used in the code job
    outputs:
      CLOUDFRONT_URL: ${{ steps.env.outputs.CLOUDFRONT_URL }}
      BUCKET_ID: ${{ steps.env.outputs.BUCKET_ID }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set environment variables from .env
      run: |
        while read line; do
            echo "$line" >> $GITHUB_ENV
          done < .env
      working-directory: ./terraform/

    - name: Print environment variables
      run: |
        echo "environmet name: $p81ENV"
        echo "AWS_REGION: $AWS_REGION"
    # update package lists and install unzip
    - name: Update package lists
      run: sudo apt-get update
    - name: Install unzip
      run: sudo apt-get install unzip
    # Install the latest version of Terragrunt CLI and configure the Terragrunt CLI configuration file with a Terragrunt Cloud user API token
    - name: Setup Terraform v1.3.7
      uses: hashicorp/setup-Terraform@v1
      with:
        terraform_version: 1.3.7
        terraform_wrapper: false
    - name: Setup Terraform version
      run: terraform --version
    - name: Setup Terraform wrapper path
      run: which terraform
    - name: Setup Terragrunt version 0.35.16
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: 0.35.16
        token: ${{ secrets.GITHUB_TOKEN }}
    # Initialize and run Terragrunt to create the infrastructure
    - name: Terragrunt apply
      run: terragrunt run-all apply --terragrunt-non-interactive -auto-approve
      working-directory: ./terraform/environments/dev
    # Export the outputs from Terraform to the GITHUB_OUTPUT to be used in the code job
    - name: Export outputs from terrafrom to GITHUB_OUTPUT
      id: env
      run: |
        echo CLOUDFRONT_URL=$(cd cloudfront && terragrunt output -raw cloudfront_url) 
        echo CLOUDFRONT_URL=$(cd cloudfront && terragrunt output -raw cloudfront_url) >> $GITHUB_OUTPUT
        echo BUCKET_ID=$(cd s3 && terragrunt output -raw bucket_id) 
        echo BUCKET_ID=$(cd s3 && terragrunt output -raw bucket_id) >> $GITHUB_OUTPUT
      working-directory: ./terraform/environments/dev
  # Code job to run the data_processing.py script
  code:
    name: code
    runs-on: ubuntu-20.04
    needs: infra
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      CLOUDFRONT_URL: ${{ needs.infra.outputs.CLOUDFRONT_URL }}
      BUCKET_ID: ${{ needs.infra.outputs.BUCKET_ID }}

    steps:
      # echo the environment variables to be used in the next stage
      - name: Use Environment Variables in Next Stage
        run: |
            echo $CLOUDFRONT_URL
            echo $BUCKET_ID
      # Checkout the repository to the GitHub Actions runner      
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x' 
      # Install the required dependencies and execute the data_processing.py script
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests boto3
      # run the data_processing.py script
      - name: Execute Python script
        run: ./data_processing.py
        working-directory: ./python
